// These are examples of request you can fire of from the Kibana Dev tools console
// All of them can also be issued from a command line terminal using curl, but you
// would have to add some options for authorization. For example:
//
// $curl -k -u elastic:PASSWORD \
//       -X GET "https://0.0.0.0:9200/_search" \
//       -H "Content-Type: application/json" \
//       -d'{"query": {"match_all": {}}}'

// listing of indexes
GET _cat/indices?v
GET _cat/indices?pretty&format=json&h=health,status,index,docs.count

// deleting indexes
DELETE index_name

// get the mappings that ES generates
GET entities/_mapping

// adding a document
// unique identifier will be generated by ES
// mappings (schema) generated depending on what you put in the index
POST /entities/_doc?pretty
  {"name": "jane doe", "age": 26, "interests": ["rap music"]}

POST /entities/_doc?pretty
  {"name": "judy doe", "age": 27, "interests": ["rap", "music"]}

// mappings are updated when you add a field
POST /entities/_doc?pretty
  {"name": "june doe", "age": 65, "hobbies": ["forestry"]}

// this one and the next one are okay because the mappings do not distinguish 
// between lists of atomic values and atomic values
POST /entities/_doc?pretty
  {"name": "jill doe", "age": 28, "hobbies": null}

POST /entities/_doc?pretty
  {"name": "jill doe", "age": 29, "hobbies": 20}

// but this one fails because it introduces new properties that are used as keys
POST /entities/_doc?pretty
  {"name": {"first": "june", "last": "doe"}, "age": 65}

// this is like "select * from entities"
GET entities/_search
{
  "query": {
    "match_all": {}
  }
}

// and this is like "select * from entities where name='jill'"
GET entities/_search
{
  "query": {
    "match": {
      "name": "jill"
    }
  }
}
